{"version":3,"sources":["error.ts","run.ts","index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAI,MAAM,GAAG,KAAb;;AAEA,SAAgB,QAAhB,GAAwB;AACtB,SAAO,MAAP;AACD;;AAFD,OAAA,CAAA,QAAA,GAAA,QAAA;;AAIA,SAAgB,SAAhB,GAAyB;AACvB,EAAA,MAAM,GAAG,IAAT;AACD;;AAFD,OAAA,CAAA,SAAA,GAAA,SAAA;;AAIA,SAAgB,KAAhB,CAAsB,IAAtB,EAAoC,OAApC,EAAmD;AACjD,EAAA,MAAM,CAAC,IAAD,EAAO,EAAP,EAAW,OAAX,CAAN;AACD;;AAFD,OAAA,CAAA,KAAA,GAAA,KAAA;;AAIA,SAAgB,MAAhB,CAAuB,IAAvB,EAAqC,KAArC,EAAoD,OAApD,EAAmE;AACjE,EAAA,OAAO,CAAC,KAAR,CAAc,UAAU,IAAI,YAAY,KAAK,KAAK,OAAO,EAAzD;AACA,EAAA,SAAS;AACV;;AAHD,OAAA,CAAA,MAAA,GAAA,MAAA;;;;;;ACdA,SAAgB,GAAhB,CAAoB,MAApB,EAAkC;AAChC,EAAA,OAAO,CAAC,GAAR,CAAY,MAAZ;AACD;;AAFD,OAAA,CAAA,GAAA,GAAA,GAAA;;;;;;;;;;;;;;ACAA,MAAA,IAAA,GAAA,eAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA;;AAEA,MAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AACA,MAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,SAAS,IAAT,CAAc,CAAd,EAAyB;AACvB,EAAA,OAAO,CAAC,GAAR,CAAY,OAAZ;AACA,QAAM,IAAK,GAAG,IAAR,IAAgB,CAAtB;;AAEA,MAAI,IAAI,CAAC,MAAL,GAAc,CAAlB,EAAqB;AACnB,IAAA,OAAO,CAAC,IAAR,CAAa,iCAAb;AACA;AACD;;AAED,EAAA,OAAO,CAAC,IAAI,CAAC,CAAD,CAAL,CAAP;AACD;;AAED,SAAS,OAAT,CAAiB,QAAjB,EAAiC;AAC/B,QAAM,MAAM,GAAG,IAAA,CAAA,OAAA,CAAG,YAAH,CAAgB,QAAhB,EAA0B,MAA1B,CAAf;AACA,EAAA,KAAA,CAAA,GAAA,CAAI,MAAJ;;AAEA,MAAI,OAAA,CAAA,QAAA,EAAJ,EAAgB;AACd,IAAA,OAAO,CAAC,IAAR,CAAa,CAAb;AACD;AACF;;AAED,IAAI,CAAC,OAAO,CAAC,IAAT,CAAJ;AAEA,OAAO,CAAC,GAAR,CAAY,MAAZ","file":"index.js","sourceRoot":"../src","sourcesContent":["let _error = false;\n\nexport function hadError() {\n  return _error;\n}\n\nexport function flagError() {\n  _error = true;\n}\n\nexport function error(line: number, message: string) {\n  report(line, \"\", message);\n}\n\nexport function report(line: number, where: string, message: string) {\n  console.error(`[line: ${line}]: Error ${where}: ${message}`);\n  flagError();\n}\n","export function run(source: string) {\n  console.log(source);\n}\n","import fs from \"fs\";\n\nimport { hadError } from \"./error\";\nimport { run } from \"./run\";\n\nfunction main(a: string[]) {\n  console.log(\"tslox\");\n  const [, , ...args] = a;\n\n  if (args.length < 1) {\n    console.warn(\"tslox needs a filepath as input\");\n    return;\n  }\n\n  runFile(args[0]);\n}\n\nfunction runFile(filePath: string) {\n  const source = fs.readFileSync(filePath, \"utf8\");\n  run(source);\n\n  if (hadError()) {\n    process.exit(1);\n  }\n}\n\nmain(process.argv);\n\nconsole.log(\"test\");\n"]}